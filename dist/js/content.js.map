{"version":3,"file":"content.js","mappings":";;;;;;;;;;;;;;;;;;;AAAO;AACP,sBAAsB,mCAAmC;AACzD,0CAA0C,wBAAwB;AAClE,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEO;AACP;AACA;AACA,kDAAkD;AAClD,6FAA6F;AAC7F,mEAAmE;AACnE;AACA,+BAA+B,eAAe;AAC9C;AACA;;AAEO;AACP;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,uBAAuB,MAAM;AAC7B;AACA,GAAG;AACH;;;;;;;SC3HA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNwE;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,2DAAc;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,qCAAqC;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,mBAAmB,0DAAa;AAChC,MAAM;AACN;AACA,mBAAmB,0DAAa;AAChC,MAAM;AACN,iCAAiC,eAAe,cAAc,yBAAyB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,kBAAkB,yBAAyB,eAAe;AACnG;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,+BAA+B,iCAAiC;AAChE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAU;AACd,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B;AACpE,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,sBAAsB;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,CAAC","sources":["webpack:///./src/common_lib.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/content_script.js"],"sourcesContent":["export function request_unhighlight(lemma) {\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    chrome.tabs.sendMessage(tabs[0].id, { wdm_unhighlight: lemma })\n  })\n}\n\nexport function make_id_suffix(text) {\n  var before = btoa(text)\n  var after = before.replace(/\\+/g, '_').replace(/\\//g, '-').replace(/=/g, '_')\n  return after\n}\n\nexport function sync_if_needed() {\n  var req_keys = ['wd_last_sync', 'wd_gd_sync_enabled', 'wd_last_sync_error']\n  chrome.storage.local.get(req_keys, function (result) {\n    var wd_last_sync = result.wd_last_sync\n    var wd_gd_sync_enabled = result.wd_gd_sync_enabled\n    var wd_last_sync_error = result.wd_last_sync_error\n    if (!wd_gd_sync_enabled || wd_last_sync_error != null) {\n      return\n    }\n    var cur_date = new Date()\n    var mins_passed = (cur_date.getTime() - wd_last_sync) / (60 * 1000)\n    var sync_period_mins = 30\n    if (mins_passed >= sync_period_mins) {\n      chrome.runtime.sendMessage({ wdm_request: 'gd_sync', interactive_mode: false })\n    }\n  })\n}\n\nexport function add_lexeme(lexeme, result_handler) {\n  var req_keys = [\n    'words_discoverer_eng_dict',\n    'wd_idioms',\n    'wd_user_vocabulary',\n    'wd_user_vocab_added',\n    'wd_user_vocab_deleted',\n  ]\n  chrome.storage.local.get(req_keys, function (result) {\n    var dict_words = result.words_discoverer_eng_dict\n    var dict_idioms = result.wd_idioms\n    var user_vocabulary = result.wd_user_vocabulary\n    var wd_user_vocab_added = result.wd_user_vocab_added\n    var wd_user_vocab_deleted = result.wd_user_vocab_deleted\n    if (lexeme.length > 100) {\n      result_handler('bad', undefined)\n      return\n    }\n    lexeme = lexeme.toLowerCase()\n    lexeme = lexeme.trim()\n    if (!lexeme) {\n      result_handler('bad', undefined)\n      return\n    }\n\n    var key = lexeme\n    if (dict_words.hasOwnProperty(lexeme)) {\n      var wf = dict_words[lexeme]\n      if (wf) {\n        key = wf[0]\n      }\n    } else if (dict_idioms.hasOwnProperty(lexeme)) {\n      var wf = dict_idioms[lexeme]\n      if (wf && wf != -1) {\n        key = wf\n      }\n    }\n\n    if (user_vocabulary.hasOwnProperty(key)) {\n      result_handler('exists', key)\n      return\n    }\n\n    var new_state = { wd_user_vocabulary: user_vocabulary }\n\n    user_vocabulary[key] = 1\n    if (typeof wd_user_vocab_added !== 'undefined') {\n      wd_user_vocab_added[key] = 1\n      new_state['wd_user_vocab_added'] = wd_user_vocab_added\n    }\n    if (typeof wd_user_vocab_deleted !== 'undefined') {\n      delete wd_user_vocab_deleted[key]\n      new_state['wd_user_vocab_deleted'] = wd_user_vocab_deleted\n    }\n\n    chrome.storage.local.set(new_state, function () {\n      sync_if_needed()\n      result_handler('ok', key)\n    })\n  })\n}\n\nexport function make_hl_style(hl_params) {\n  if (!hl_params.enabled) return undefined\n  let result = ''\n  if (hl_params.bold) result += 'font-weight:bold;'\n  if (hl_params.useBackground) result += 'background-color:' + hl_params.backgroundColor + ';'\n  if (hl_params.useColor) result += 'color:' + hl_params.color + ';'\n  if (!result) return undefined\n  result += 'font-size:inherit;display:inline;'\n  return result\n}\n\nexport function localizeHtmlPage() {\n  //Localize by replacing __MSG_***__ meta tags\n  var objects = document.getElementsByTagName('html')\n  for (var j = 0; j < objects.length; j++) {\n    var obj = objects[j]\n    var valStrH = obj.innerHTML.toString()\n    var valNewH = valStrH.replace(/__MSG_(\\w+)__/g, function (match, v1) {\n      return v1 ? chrome.i18n.getMessage(v1) : ''\n    })\n    if (valNewH != valStrH) {\n      obj.innerHTML = valNewH\n    }\n  }\n}\n\nexport function spformat(src) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  return src.replace(/{(\\d+)}/g, function (match, number) {\n    return typeof args[number] != 'undefined' ? args[number] : match\n  })\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { make_id_suffix, add_lexeme, make_hl_style } from './common_lib'\n\nvar dict_words = null\nvar dict_idioms = null\n\nvar min_show_rank = null\nvar word_max_rank = null\nvar user_vocabulary = null\nvar is_enabled = null\nvar wd_hl_settings = null\nvar wd_hover_settings = null\nvar wd_online_dicts = null\nvar wd_enable_tts = null\n\nvar disable_by_keypress = false\n\nvar current_lexeme = ''\nvar cur_wd_node_id = 1\n\nvar word_re = new RegExp('^[a-z][a-z]*$')\n\nvar function_key_is_pressed = false\nvar rendered_node_id = null\nvar node_to_render_id = null\n\nfunction make_class_name(lemma) {\n  if (lemma) {\n    return 'wdautohl_' + make_id_suffix(lemma)\n  }\n  return 'wdautohl_none_none'\n}\n\nfunction get_rare_lemma(word) {\n  if (word.length < 3) return undefined\n  var wf = undefined\n  if (dict_words.hasOwnProperty(word)) {\n    wf = dict_words[word]\n  }\n  if (!wf || wf[1] < min_show_rank) return undefined\n  const lemma = wf[0]\n  return !user_vocabulary || !user_vocabulary.hasOwnProperty(lemma) ? lemma : undefined\n}\n\nfunction get_word_percentile(word) {\n  if (!dict_words.hasOwnProperty(word)) return undefined\n  const wf = dict_words[word]\n  const result = Math.ceil((wf[1] * 100) / word_max_rank)\n  return result\n}\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw message || 'Assertion failed'\n  }\n}\n\nfunction limit_text_len(word) {\n  if (!word) return word\n  word = word.toLowerCase()\n  var max_len = 20\n  if (word.length <= max_len) return word\n  return word.slice(0, max_len) + '...'\n}\n\nfunction getHeatColorPoint(freqPercent) {\n  if (!freqPercent) freqPercent = 0\n  freqPercent = Math.max(0, Math.min(100, freqPercent))\n  var hue = 100 - freqPercent\n  return 'hsl(' + hue + ', 100%, 50%)'\n}\n\nfunction renderBubble() {\n  if (!node_to_render_id) return\n  if (node_to_render_id === rendered_node_id) return\n\n  const node_to_render = document.getElementById(node_to_render_id)\n  if (!node_to_render) return\n\n  const classattr = node_to_render.getAttribute('class')\n  const is_highlighted = classattr != 'wdautohl_none_none'\n  const param_key = is_highlighted ? 'hl_hover' : 'ow_hover'\n  const param_value = wd_hover_settings[param_key]\n  if (param_value == 'never' || (param_value == 'key' && !function_key_is_pressed)) {\n    return\n  }\n\n  const wdSpanText = node_to_render.textContent\n  const bubbleDOM = document.getElementById('wd_selection_bubble')\n  const bubbleText = document.getElementById('wd_selection_bubble_text')\n  const bubbleFreq = document.getElementById('wd_selection_bubble_freq')\n  const iframe = document.getElementById('wd_iframe_bing')\n  iframe.src =\n    'https://cn.bing.com/dict/clientsearch?mkt=zh-CN&setLang=zh&form=BDVEHC&ClientVer=BDDTV3.5.1.4320&q=' + wdSpanText\n  bubbleText.textContent = limit_text_len(wdSpanText)\n  const prcntFreq = get_word_percentile(wdSpanText.toLowerCase())\n  bubbleFreq.textContent = prcntFreq ? prcntFreq + '%' : 'n/a'\n  bubbleFreq.style.backgroundColor = getHeatColorPoint(prcntFreq)\n  const current_lexeme = wdSpanText\n  var bcr = node_to_render.getBoundingClientRect()\n  bubbleDOM.style.top = bcr.bottom + 'px'\n  bubbleDOM.style.left = Math.max(5, Math.floor((bcr.left + bcr.right) / 2) - 100) + 'px'\n  bubbleDOM.style.display = 'block'\n  rendered_node_id = node_to_render_id\n\n  if (wd_enable_tts) {\n    chrome.runtime.sendMessage({ type: 'tts_speak', word: wdSpanText })\n  }\n}\n\nfunction hideBubble(force) {\n  const bubbleDOM = document.getElementById('wd_selection_bubble')\n  if (force || (!bubbleDOM.wdMouseOn && node_to_render_id != rendered_node_id)) {\n    bubbleDOM.style.display = 'none'\n    rendered_node_id = null\n  }\n}\n\nfunction process_hl_leave() {\n  node_to_render_id = null\n  setTimeout(function () {\n    hideBubble(false)\n  }, 100)\n}\n\nfunction processMouse(e) {\n  var hitNode = document.elementFromPoint(e.clientX, e.clientY)\n  if (!hitNode) {\n    process_hl_leave()\n    return\n  }\n  var classattr = null\n  try {\n    classattr = hitNode.getAttribute('class')\n  } catch (exc) {\n    process_hl_leave()\n    return\n  }\n  if (!classattr || !classattr.startsWith('wdautohl_')) {\n    process_hl_leave()\n    return\n  }\n  node_to_render_id = hitNode.id\n  setTimeout(function () {\n    renderBubble()\n  }, 200)\n}\n\nfunction text_to_hl_nodes(text, dst) {\n  var lc_text = text.toLowerCase()\n  var ws_text = lc_text.replace(/[,;()?!`:\"'.\\s\\-\\u2013\\u2014\\u201C\\u201D\\u2019]/g, ' ')\n  var ws_text = ws_text.replace(/[^\\w ]/g, '.')\n\n  var tokens = ws_text.split(' ')\n\n  var num_good = 0 //number of found dictionary words\n  var num_nonempty = 0\n  var ibegin = 0 //beginning of word\n  var wnum = 0 //word number\n\n  var matches = []\n\n  var tokenize_other = wd_hover_settings.ow_hover != 'never'\n\n  while (wnum < tokens.length) {\n    if (!tokens[wnum].length) {\n      wnum += 1\n      ibegin += 1\n      continue\n    }\n    num_nonempty += 1\n    var match = undefined\n    if (!match && wd_hl_settings.idiomParams.enabled) {\n      var lwnum = wnum //look ahead word number\n      var libegin = ibegin //look ahead word begin\n      var mwe_prefix = ''\n      while (lwnum < tokens.length) {\n        mwe_prefix += tokens[lwnum]\n        var wf = undefined\n        if (dict_idioms.hasOwnProperty(mwe_prefix)) {\n          wf = dict_idioms[mwe_prefix]\n        }\n        if (wf === -1 && (!libegin || text[libegin - 1] === ' ')) {\n          //idiom prefix found\n          mwe_prefix += ' '\n          libegin += tokens[lwnum].length + 1\n          lwnum += 1\n        } else if (wf && wf != -1 && (!libegin || text[libegin - 1] === ' ')) {\n          //idiom found\n          if (user_vocabulary && user_vocabulary.hasOwnProperty(wf)) break\n          match = { normalized: wf, kind: 'idiom', begin: ibegin, end: ibegin + mwe_prefix.length }\n          ibegin += mwe_prefix.length + 1\n          num_good += lwnum - wnum + 1\n          wnum = lwnum + 1\n        } else {\n          //idiom not found\n          break\n        }\n      }\n    }\n    if (!match && wd_hl_settings.wordParams.enabled) {\n      const lemma = get_rare_lemma(tokens[wnum])\n      if (lemma) {\n        match = { normalized: lemma, kind: 'lemma', begin: ibegin, end: ibegin + tokens[wnum].length }\n        ibegin += tokens[wnum].length + 1\n        wnum += 1\n        num_good += 1\n      }\n    }\n    if (tokenize_other && !match && tokens[wnum].length >= 3 && word_re.test(tokens[wnum])) {\n      match = { normalized: null, kind: 'word', begin: ibegin, end: ibegin + tokens[wnum].length }\n      ibegin += tokens[wnum].length + 1\n      wnum += 1\n    }\n    if (dict_words.hasOwnProperty(tokens[wnum])) {\n      num_good += 1\n    }\n    if (match) {\n      matches.push(match)\n    } else {\n      ibegin += tokens[wnum].length + 1\n      wnum += 1\n    }\n  }\n\n  if ((num_good * 1.0) / num_nonempty < 0.1) {\n    return 0\n  }\n\n  var last_hl_end_pos = 0\n  var insert_count = 0\n  for (var i = 0; i < matches.length; i++) {\n    let text_style = undefined\n    match = matches[i]\n    if (match.kind === 'lemma') {\n      const hlParams = wd_hl_settings.wordParams\n      text_style = make_hl_style(hlParams)\n    } else if (match.kind === 'idiom') {\n      const hlParams = wd_hl_settings.idiomParams\n      text_style = make_hl_style(hlParams)\n    } else if (match.kind === 'word') {\n      text_style = 'font:inherit;display:inline;color:inherit;background-color:inherit;'\n    }\n    if (text_style) {\n      insert_count += 1\n      if (last_hl_end_pos < match.begin) {\n        dst.push(document.createTextNode(text.slice(last_hl_end_pos, match.begin)))\n      }\n      last_hl_end_pos = match.end\n      //span = document.createElement(\"span\");\n      const span = document.createElement('wdautohl-customtag')\n      span.textContent = text.slice(match.begin, last_hl_end_pos)\n      span.setAttribute('style', text_style)\n      span.id = 'wdautohl_id_' + cur_wd_node_id\n      cur_wd_node_id += 1\n      var wdclassname = make_class_name(match.normalized)\n      span.setAttribute('class', wdclassname)\n      dst.push(span)\n    }\n  }\n\n  if (insert_count && last_hl_end_pos < text.length) {\n    dst.push(document.createTextNode(text.slice(last_hl_end_pos, text.length)))\n  }\n\n  return insert_count\n}\n\nvar good_tags_list = ['P', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'B', 'SMALL', 'STRONG', 'Q', 'DIV', 'SPAN']\n\nfunction mygoodfilter(node) {\n  if (good_tags_list.indexOf(node.parentNode.tagName) !== -1) return NodeFilter.FILTER_ACCEPT\n  return NodeFilter.FILTER_SKIP\n}\n\nfunction textNodesUnder(el) {\n  var n,\n    a = [],\n    walk = document.createTreeWalker(el, NodeFilter.SHOW_TEXT, mygoodfilter, false)\n  while ((n = walk.nextNode())) {\n    a.push(n)\n  }\n  return a\n}\n\nfunction doHighlightText(textNodes) {\n  if (textNodes === null || dict_words === null || min_show_rank === null) {\n    return\n  }\n  if (disable_by_keypress) {\n    return\n  }\n  var num_found = 0\n  for (var i = 0; i < textNodes.length; i++) {\n    if (textNodes[i].offsetParent === null) {\n      continue\n    }\n    const text = textNodes[i].textContent\n    if (text.length <= 3) {\n      continue\n    }\n    if (text.indexOf('{') !== -1 && text.indexOf('}') !== -1) {\n      continue //pathetic hack to skip json data in text (e.g. google images use it).\n    }\n    const new_children = []\n    const found_count = text_to_hl_nodes(text, new_children)\n    if (found_count) {\n      num_found += found_count\n      const parent_node = textNodes[i].parentNode\n      assert(new_children.length > 0, 'children must be non empty')\n      for (var j = 0; j < new_children.length; j++) {\n        parent_node.insertBefore(new_children[j], textNodes[i])\n      }\n      parent_node.removeChild(textNodes[i])\n    }\n    if (num_found > 10000)\n      //limiting number of words to highlight\n      break\n  }\n}\n\nfunction onNodeInserted(event) {\n  var inobj = event.target\n  if (!inobj) return\n  var classattr = null\n  if (typeof inobj.getAttribute !== 'function') {\n    return\n  }\n  try {\n    classattr = inobj.getAttribute('class')\n  } catch (e) {\n    return\n  }\n  if (!classattr || !classattr.startsWith('wdautohl_')) {\n    var textNodes = textNodesUnder(inobj)\n    doHighlightText(textNodes)\n  }\n}\n\nfunction unhighlight(lemma) {\n  var wdclassname = make_class_name(lemma)\n  var hlNodes = document.getElementsByClassName(wdclassname)\n  while (hlNodes && hlNodes.length > 0) {\n    var span = hlNodes[0]\n    span.setAttribute(\n      'style',\n      'font-weight:inherit;color:inherit;font-size:inherit;background-color:inherit;display:inline;'\n    )\n    span.setAttribute('class', 'wdautohl_none_none')\n  }\n}\n\nfunction get_verdict(is_enabled, black_list, white_list, callback_func) {\n  chrome.runtime.sendMessage({ wdm_request: 'hostname' }, function (response) {\n    if (!response) {\n      callback_func('unknown error')\n      return\n    }\n    var hostname = response.wdm_hostname\n    if (black_list.hasOwnProperty(hostname)) {\n      callback_func('site in \"Skip List\"')\n      return\n    }\n    if (white_list.hasOwnProperty(hostname)) {\n      callback_func('highlight')\n      return\n    }\n    if (!is_enabled) {\n      callback_func('site is not in \"Favorites List\"')\n      return\n    }\n    chrome.runtime.sendMessage({ wdm_request: 'page_language' }, function (lang_response) {\n      if (!lang_response) {\n        callback_func('unknown error')\n        return\n      }\n      callback_func(lang_response.wdm_iso_language_code == 'en' ? 'highlight' : 'page language is not English')\n    })\n  })\n}\n\nfunction bubble_handle_tts(lexeme) {\n  chrome.runtime.sendMessage({ type: 'tts_speak', word: lexeme })\n}\n\nfunction bubble_handle_add_result(report, lemma) {\n  if (report === 'ok') {\n    unhighlight(lemma)\n  }\n}\n\nfunction create_bubble() {\n  var bubbleDOM = document.createElement('div')\n  bubbleDOM.setAttribute('class', 'wdSelectionBubble')\n  bubbleDOM.setAttribute('id', 'wd_selection_bubble')\n\n  var infoSpan = document.createElement('span')\n  infoSpan.setAttribute('id', 'wd_selection_bubble_text')\n  infoSpan.setAttribute('class', 'wdInfoSpan')\n  bubbleDOM.appendChild(infoSpan)\n\n  var freqSpan = document.createElement('span')\n  freqSpan.setAttribute('id', 'wd_selection_bubble_freq')\n  freqSpan.setAttribute('class', 'wdFreqSpan')\n  freqSpan.textContent = 'n/a'\n  bubbleDOM.appendChild(freqSpan)\n\n  var addButton = document.createElement('button')\n  addButton.setAttribute('class', 'wdAddButton')\n  addButton.textContent = chrome.i18n.getMessage('menuItem')\n  addButton.style.marginBottom = '4px'\n  addButton.addEventListener('click', function () {\n    add_lexeme(current_lexeme, bubble_handle_add_result)\n  })\n  bubbleDOM.appendChild(addButton)\n\n  var speakButton = document.createElement('button')\n  speakButton.setAttribute('class', 'wdAddButton')\n  speakButton.textContent = 'Audio'\n  speakButton.style.marginBottom = '4px'\n  speakButton.addEventListener('click', function () {\n    bubble_handle_tts(current_lexeme)\n  })\n  bubbleDOM.appendChild(speakButton)\n\n  //dictPairs = makeDictionaryPairs();\n  //   var dictPairs = wd_online_dicts\n  //   for (var i = 0; i < dictPairs.length; ++i) {\n  //     var dictButton = document.createElement('button')\n  //     dictButton.setAttribute('class', 'wdAddButton')\n  //     dictButton.textContent = dictPairs[i].title\n  //     dictButton.setAttribute('wdDictRefUrl', dictPairs[i].url)\n  //     dictButton.addEventListener('click', function (e) {\n  //       target = e.target\n  //       dictUrl = target.getAttribute('wdDictRefUrl')\n  //       var newTabUrl = get_dict_definition_url(dictUrl, current_lexeme)\n  //       chrome.runtime.sendMessage({ wdm_new_tab_url: newTabUrl })\n  //     })\n  //     bubbleDOM.appendChild(dictButton)\n  //   }\n\n  const iframe = document.createElement('iframe')\n  iframe.id = 'wd_iframe_bing'\n  iframe.width = '400px'\n  iframe.height = '400px'\n  bubbleDOM.appendChild(iframe)\n\n  bubbleDOM.addEventListener('mouseleave', function (e) {\n    bubbleDOM.wdMouseOn = false\n    hideBubble(false)\n  })\n  bubbleDOM.addEventListener('mouseenter', function (e) {\n    bubbleDOM.wdMouseOn = true\n  })\n\n  return bubbleDOM\n}\n\nfunction initForPage() {\n  if (!document.body) return\n\n  chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    if (request.wdm_unhighlight) {\n      var lemma = request.wdm_unhighlight\n      unhighlight(lemma)\n    }\n  })\n\n  chrome.storage.local.get(\n    [\n      'words_discoverer_eng_dict',\n      'wd_online_dicts',\n      'wd_idioms',\n      'wd_hover_settings',\n      'wd_word_max_rank',\n      'wd_show_percents',\n      'wd_is_enabled',\n      'wd_user_vocabulary',\n      'wd_hl_settings',\n      'wd_black_list',\n      'wd_white_list',\n      'wd_enable_tts',\n    ],\n    function (result) {\n      dict_words = result.words_discoverer_eng_dict\n      dict_idioms = result.wd_idioms\n      wd_online_dicts = result.wd_online_dicts\n      wd_enable_tts = result.wd_enable_tts\n      user_vocabulary = result.wd_user_vocabulary\n      wd_hover_settings = result.wd_hover_settings\n      word_max_rank = result.wd_word_max_rank\n      var show_percents = result.wd_show_percents\n      wd_hl_settings = result.wd_hl_settings\n      min_show_rank = (show_percents * word_max_rank) / 100\n      is_enabled = result.wd_is_enabled\n      var black_list = result.wd_black_list\n      var white_list = result.wd_white_list\n\n      get_verdict(is_enabled, black_list, white_list, function (verdict) {\n        chrome.runtime.sendMessage({ wdm_verdict: verdict })\n        if (verdict !== 'highlight') return\n\n        document.addEventListener('keydown', function (event) {\n          if (event.keyCode == 17) {\n            function_key_is_pressed = true\n            renderBubble()\n            return\n          }\n          var elementTagName = event.target.tagName\n          if (!disable_by_keypress && elementTagName != 'BODY') {\n            //workaround to prevent highlighting in facebook messages\n            //this logic can also be helpful in other situations, it's better play safe and stop highlighting when user enters data.\n            disable_by_keypress = true\n            chrome.runtime.sendMessage({ wdm_verdict: 'keyboard' })\n          }\n        })\n\n        document.addEventListener('keyup', function (event) {\n          if (event.keyCode == 17) {\n            function_key_is_pressed = false\n            return\n          }\n        })\n\n        var textNodes = textNodesUnder(document.body)\n        doHighlightText(textNodes)\n\n        var bubbleDOM = create_bubble()\n        document.body.appendChild(bubbleDOM)\n        document.addEventListener('mousedown', hideBubble(true), false)\n        document.addEventListener('mousemove', processMouse, false)\n        document.addEventListener('DOMNodeInserted', onNodeInserted, false)\n        window.addEventListener('scroll', function () {\n          node_to_render_id = null\n          hideBubble(true)\n        })\n      })\n    }\n  )\n}\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  initForPage()\n})\n"],"names":[],"sourceRoot":""}